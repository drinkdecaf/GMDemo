<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GameOver = false
DieTime = 60 // how long after death we go to game over screen
Timer = DieTime

window_set_fullscreen(true)

//How big is the screen?
ScreenWidth = display_get_width();
ScreenHeight = display_get_height();

//window_set_size(ScreenWidth, ScreenHeight);

view_wview = ScreenWidth
view_hview = ScreenHeight

view_wport = ScreenWidth
view_hport = ScreenHeight

surface_resize(application_surface, ScreenWidth, ScreenHeight)

//random color
PossibleColors[0] = make_color_hsv(0, 255, 255)
PossibleColors[1] = make_color_hsv(40, 255, 255)
PossibleColors[2] = make_color_hsv(100, 255, 255)
PossibleColors[3] = make_color_hsv(170, 255, 255)
PossibleColors[4] = make_color_hsv(200, 255, 255)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_escape) {
    game_end()
}

if keyboard_check_pressed(ord('R')) {
    game_restart()
}

if GameOver {
    if Timer == DieTime {
        audio_stop_all()
        audio_play_sound(dDie, 2, false)
    
        with(oPlayer){
        
            if instance_exists(MyShadow) {
                with(MyShadow) {
                    instance_destroy()
                }
            }
        
            instance_destroy()
        }
        
        with (oGun) {
            instance_destroy()
        }
    }
    
    instance_create(view_xview+view_wview/2, view_yview+view_hview/2, oGameOver)
    if Timer &gt; 0 { Timer --; }


} else {
    if instance_number(oEnemy) &lt; 2 {
        instance_create(random(room_width), random(room_height), oEnemy)
    }

    if score &gt; 3 and instance_number(oEnemy) &lt; 3 {
        instance_create(random(room_width), random(room_height), oEnemy)
    }

    if score &gt; 5 and instance_number(oEnemy) &lt; 4 {
        instance_create(random(room_width), random(room_height), oEnemy)
    }
    
    if score &gt; 10 and instance_number(oEnemy) &lt; 6 {
        instance_create(random(room_width), random(room_height), oEnemy)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
