<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//speed, direction, size
speed = 180 / room_speed
direction = random(360)
image_xscale = random(3) + .5
image_yscale = image_xscale

//random color
MyColor = make_colour_hsv(random(255), random(55) + 200, random(55) + 200);
image_blend = MyColor

//try to spawn new enemies away from player
while distance_to_object(oPlayer) &lt; 200 { 
    x = random(room_width)
    y = random(room_height)
}

//marker object
MyMarker = instance_create(-1000, -1000, oMarker)
MyMarker.image_blend = MyColor
MarkerEdge = 10 //dist of marker from screen edge

//eyes object
MyEyes = instance_create(x, y, oEnemyEyes)

//shadow object
MyShadow = instance_create(x, y, oShadow)
MyShadow.image_alpha = 0.5
MyShadow.image_xscale = image_xscale
MyShadow.image_yscale = image_xscale
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Child objects follow Enemy */

//eyes
if (instance_exists(MyEyes)) {
    MyEyes.x = x
    MyEyes.y = y
    MyEyes.image_angle = image_angle
    MyEyes.image_xscale = image_xscale
    MyEyes.image_yscale = image_yscale
    MyEyes.direction = direction
    MyEyes.speed = speed
}

//shadow
if (instance_exists(MyShadow)) {
    MyShadow.x = x
    MyShadow.y = y
    MyShadow.image_angle = image_angle
    MyShadow.image_xscale = image_xscale * 1.8
    MyShadow.image_yscale = image_yscale * 1.8
    MyShadow.direction = direction
    MyShadow.speed = speed
}


/* Slime */

if (random(50) &lt; 9) {
    NewSplat = instance_create(x, y, oSplat)
    NewSplat.image_blend = MyColor
    NewSplat.image_xscale = image_xscale
    NewSplat.image_yscale = image_xscale
}

/* Facing */
image_angle = direction

/* Bouncing */

if y &lt; 0 or y &gt; room_height {
    vspeed = vspeed * - 1
}

if x &lt; 0 or x &gt; room_width {
    hspeed = hspeed * - 1
}

/* Randomly Grow */
if distance_to_object(oPlayer) &gt; 100 &amp;&amp; random(1000) &lt; 5 and image_xscale &lt; 4 {
    image_xscale += 0.2
    image_yscale = image_xscale
    if speed &gt; (90 / room_speed) {
        speed -= (room_speed / 120)
    }
}

/* Damage */

IncomingBullet = instance_place(x,y,oBullet)

if instance_exists(IncomingBullet) {
    
    //Destroy the bullet
    with IncomingBullet {
        instance_destroy()
    }
    
    audio_play_sound(dHit, 1, false)

    //Shrink ourselves
    image_xscale = image_xscale - 0.2
    image_yscale = image_xscale
    
    if speed &lt; (390 / room_speed) {
        speed += 30 / room_speed
    }
    
    //Destroy us if we've shrunk ourselves to oblivion
    if image_xscale &lt;= 0.2 {
        audio_play_sound(dPoof, 1, false)
        
        for (i = 0; i &lt; 10; i++) {
            NewSplat = instance_create(x + random(40) - 20, y + random(40) - 20, oSplat)
            NewSplat.image_blend = MyColor
            NewSplat.image_xscale = random(2) + .5
            NewSplat.image_yscale = NewSplat.image_xscale
        }
        
        //Create New Enemy
        instance_create(random(room_width), random(room_height), oEnemy)
        
        //Destroy Eyes Obj
        with(MyEyes) {
            instance_destroy()
        }
        
        //Destroy Shadow Obj
        with(MyShadow) {
            instance_destroy()
        }
        
        //Destroy Marker Obj
        with(MyMarker) {
            instance_destroy()
        }
        
        //track score
        oGame.score ++;
        
        //change bullet color  
        oPlayer.BulletColor = MyColor      
        
        //byee
        instance_destroy()
    }
}


/* Marker */

if instance_exists(MyMarker) {
    
    //default to off-screen to hide
    MyMarker.x = -1000
    MyMarker.y = -1000

    //if I'm offscreen...
    if x &lt; view_xview or x &gt; view_xview + view_wview or y &lt; view_yview or y &gt; view_yview + view_hview {
        CenterX = view_xview + (view_wview / 2)
        CenterY = view_yview + (view_hview / 2)
        
        //position marker to show where I am
        if (line_rect_col_inside(CenterX, CenterY, x, y, view_xview + MarkerEdge, view_yview + MarkerEdge, view_xview + view_wview - MarkerEdge, view_yview + view_hview - MarkerEdge)) {
            if distance_to_point(_x, _y) &gt; 30 {
                MyMarker.x = _x
                MyMarker.y = _y
            }
        }
    } 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
